<MudText Typo="Typo.h4">@(string.IsNullOrEmpty(Title) ? "Savitar WebAssembly, by Michael Smit" : Title)</MudText>
<br/>

@if (!_isLoaded)
{
    <MudContainer>
        <MudContainer Class="spinner" />        
        <br />
        <MudText Typo="Typo.h3" Style="text-align: center">@Message</MudText>        
    </MudContainer>
}
else
{        
    @ChildContent
}

@code {
    bool _isLoaded = false;
    protected string Message { get; set; } = "Loading";

    [Parameter]
    public string Title { get; init; }
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public EventCallback<BasePageServices> OnInitData { get; set; }

    protected void SetMessage(string message)
    {
        Message = message;
    }

    protected override async Task OnInitializedAsync()
    {
        var basePageServices = new BasePageServices()
        {
            DisplayMessage = SetMessage
        };
        await OnInitData.InvokeAsync(basePageServices);

        //await Task.Delay(5000); // TODO actual initialization job
        _isLoaded = true;        
    }
}
