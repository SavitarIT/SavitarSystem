@page "/login"
@using Savitar.WebAssembly.Services.Implementations
@using Microsoft.AspNetCore.Components
@using Savitar.Domain.Models
@layout MainLayout;
@inject NavigationManager _navigationManager;
@inject IdentityAuthenticationStateProvider _authStateProvider;
@attribute [AllowAnonymous]

<BasePage Title="Login">
    <div style="max-width: 400px;">
        <EditForm Model="@Model" OnValidSubmit="OnSubmit">
            <DataAnnotationsValidator />
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Email" @bind-Value="Model.Email" For="@(() => Model.Email)" />
                    <MudTextField Label="Password" @bind-Value="Model.Password" For="@(() => Model.Password)" InputType="InputType.Password" />
                    <MudDivide />
                    <MudCheckBox @bind-Checked="@Model.RememberMe" Label="Remember Me!" Color="Color.Primary"></MudCheckBox>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Login</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
        
        <MudDivider FlexItem="true" DividerType="DividerType.FullWidth" />
        <MudText>Don't have an account? <MudLink Href="/register">Register here</MudLink></MudText>
    </div>
</BasePage>

@code{
    LoginParameters Model { get; } = new LoginParameters();

    async Task OnSubmit()
    {
        try
        {
            await _authStateProvider.Login(Model);
            _navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            _snackbar.Add(ex.Message, Severity.Error);
        }
    }
}