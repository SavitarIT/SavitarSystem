@page "/mywork"
@using Savitar.Web.Models
@using Savitar.Web.Services.Contracts
@inject HttpClient Http
@inject ICVDataService CVDataService

<MudText Typo="Typo.h4">My Work</MudText>

@if (_clients == null)
{
    <MudContainer Class="spinner" />
}
else
{
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.subtitle1">Feel free to peruse or CLONE my public repositories. Naturally there won't be any of my clients code, but there will be common libraries, utilities and internal projects visible.</MudText>
            <MudLink Href="https://github.com/SavitarIT" Target="_blank"><img title="GitHub" src="/Images/GitHub.png" width="36" height="36"></MudLink>
            <MudLink Href="https://bitbucket.org/DominionZA" Target="_blank"><img title="BitBucket" src="/Images/Bitbucket.png" width="36" height="36"></MudLink>
        </MudItem>

        
        @foreach (var project in GetOrderedProjects())
        {
            
            <MudItem xs="12">
                <MudCard Outlined="true">
                    <MudCardHeader Class="pl-5 py-1" style="background-color: var(--mud-palette-background-grey)">
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@project.Name</MudText>
                            @*@if (!string.IsNullOrEmpty(project.Url))
                            {
                                <a href="@project.Url" target="_blank" class="oi oi-external-link mr-2"></a>
                            }*@
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent Class="pa=0">
                        <MudText Typo="Typo.body1">@((MarkupString)project.Description)</MudText>
                        <br />
                        @if (project.Responsibilities != null && project.Responsibilities.Any())
                        {
                            <MudText Typo="Typo.h6">Responsibilities</MudText>
                            <MudText Typo="Typo.body2" Class="pl-4">
                                <ul class="list-group list-group-flush">
                                    @foreach (var item in @project.Responsibilities)
                                    {
                                        <li>@item.Name</li>
                                    }
                                </ul>
                            </MudText>
                        }

                        @if (project.TechStack != null && project.TechStack.Any())
                        {
                            <MudText Typo="Typo.h6">Tech Stack</MudText>
                            <MudText Typo="Typo.body2" Class="pl-4">
                                <ul class="list-group list-group-flush">
                                    @foreach (var item in project.TechStack)
                                    {
                                        <li>@item.Name</li>
                                    }
                                </ul>
                            </MudText>                    
                        }
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
}

@code {
    private Client[] _clients;

    protected override async Task OnInitializedAsync()
    {        
        _clients = await CVDataService.GetClientsAsync();
    }

    protected IList<Project> GetOrderedProjects()
    {
        return _clients.Select(x => x.Projects).SelectMany(x => x).OrderBy(x => x.Name).ToList();
    }
}